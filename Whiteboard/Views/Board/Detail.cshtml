@model Whiteboard.Models.Board

@{
    ViewBag.Title = Model.Name;
}

@section header {
    <form class="pull-left form-search board-name-form" data-bind="submit: saveName">
        <input data-bind="value: name" class="input-medium search-query" placeholder="Unnamed Board" />
        <div data-bind="loadingWhen: saveName.isRunning" class="name-save-marker">
            <i class="icon-ok icon-white" data-bind="visible: hasSavedName"></i>
        </div>
    </form>

    <a class="btn pull-left btn-info" title="Email Board Link" href="mailto:?subject=Whiteboard%20Link&body=Come%20join%20my%20Whiteboard%20at%20@(Request.Url.AbsoluteUri)">
        <i class="icon-envelope icon-white"></i>
    </a>

    <div class="pull-left dropdown" title="Board Events">
        <a class="btn dropdown-toggle btn-inverse" data-toggle="dropdown" href="#" data-bind="click: clearNewEvents">
            <strong data-bind="visible: newEvents, text: newEvents"></strong>
            <i class="icon-flag icon-white"></i>
            <span class="caret"></span>
        </a>
        <ul data-bind="foreach: events" class="dropdown-menu event-menu">
            <li class="event-container well">
                <h5 data-bind="text: Description"></h5>
                <p data-bind="text: moment.utc(Date()).local().fromNow()" class="date"></p>
                <p data-bind="text: User || '(Anonymous}'" class="username"></p>
            </li>
        </ul>
    </div>
}

<div id="canvas-container">

</div>

@section scripts {
    @Scripts.Render("~/bundles/moment")
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/viewmodels")
    @Scripts.Render("~/bundles/signalr")
    @Scripts.Render("~/bundles/kinetic")
    <script src="@Url.Content("~/signalr/hubs")" type="text/javascript"></script>
    <script>
        var initialData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(this.Model));

        $(function () {
            var hub = $.connection.boardHub;
            
            var viewModel = new ViewModels.BoardViewModel(hub, initialData);
            var canvas = new ViewModels.CanvasViewModel("canvas-container");
            ko.applyBindings(viewModel);

            canvas.artifacts.push(new ViewModels.ArtifactViewModel({
                Type: "Path",
                Data: JSON.stringify({
                    x: 100, y: 150,
                    data: "M12.582,9.551C3.251,16.237,0.921,29.021,7.08,38.564l-2.36,1.689l4.893,2.262l4.893,2.262l-0.568-5.36l-0.567-5.359l-2.365,1.694c-4.657-7.375-2.83-17.185,4.352-22.33c7.451-5.338,17.817-3.625,23.156,3.824c5.337,7.449,3.625,17.813-3.821,23.152l2.857,3.988c9.617-6.893,11.827-20.277,4.935-29.896C35.591,4.87,22.204,2.658,12.582,9.551z",
                    fill: "green"
                })
            }));

            canvas.artifacts.push(new ViewModels.ArtifactViewModel({
                Type: "Circle",
                Data: JSON.stringify({
                    x: 150, y: 120,
                    radius: 40,
                    stroke: "red",
                    strokeWidth: 3
                })
            }));
            
            //note: using longPolling to work around bug 510 (https://github.com/SignalR/SignalR/issues/510) when working on Azure
            $.connection.hub.start({ transport: 'longPolling' }, viewModel.onHubStarted);
        });
    </script>
}