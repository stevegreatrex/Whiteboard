@model Whiteboard.Models.Board

@{
    ViewBag.Title = Model.Name;
}

@section header {
    <p class="header-text pull-left" data-bind="text: name, visible: !isEditingName()"></p> 
    <a class="btn pull-left" data-bind="click: beginEditName, visible: !isEditingName()">
        <i class="icon-pencil"></i>
    </a>
    <form class="pull-left" data-bind="submit: saveName, visible: isEditingName, loadingWhen: saveName.isRunning, enable: isEditingName">
        <input data-bind="value: name" />
        <button type="submit" class="btn btn-primary">
            <i class="icon-ok icon-white"></i>
        </button>
    </form>

    <div class="pull-left dropdown">
        <a class="btn dropdown-toggle btn-inverse" data-toggle="dropdown" href="#" data-bind="click: clearNewEvents">
            <strong data-bind="visible: newEvents, text: newEvents"></strong>
            <i class="icon-flag icon-white"></i>
            <span class="caret"></span>
        </a>
        <ul data-bind="foreach: events" class="dropdown-menu event-menu">
            <li class="event-container well">
                <h5 data-bind="text: Description"></h5>
                <p data-bind="text: moment.utc(Date()).local().fromNow()" class="date"></p>
                <p data-bind="text: User || '(Anonymous}'" class="username"></p>
            </li>
        </ul>
    </div>
    
}


@section scripts {
    @Scripts.Render("~/bundles/moment")
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/viewmodels")
    @Scripts.Render("~/bundles/signalr")
    <script src="@Url.Content("~/signalr/hubs")" type="text/javascript"></script>
    <script>
        var initialData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(this.Model));

        $(function () {
            var hub = $.connection.boardHub;
            
            var viewModel = new ViewModels.BoardViewModel(hub, initialData);
            ko.applyBindings(viewModel);
            
            //note: using longPolling to work around bug 510 (https://github.com/SignalR/SignalR/issues/510) when working on Azure
            $.connection.hub.start({ transport: 'longPolling' }, viewModel.onHubStarted);
        });
    </script>
}