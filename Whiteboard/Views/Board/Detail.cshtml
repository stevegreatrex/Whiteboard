@model Whiteboard.Models.Board

@{
    ViewBag.Title = Model.Name;
}

@section header {
    
    <div class="pull-right dropdown" title="Tools">
        <a class="btn dropdown-toggle btn-primary" data-toggle="dropdown" href="#">
            <i class="icon-wrench icon-white"></i>
            <span class="caret"></span>
        </a>
        <ul class="dropdown-menu">
            <li class="nav-header">Tools</li>
            <li>
                <a href="#" data-bind="confirmDeleteButton: { action: clearBoard }">
                    <i class="icon-fire"></i>
                    Reset Board
                </a>
            </li>
            <li class="nav-header">Board Actions</li>
            <li>
                 <a title="Email Board Link" href="mailto:?subject=Whiteboard%20Link&body=Come%20join%20my%20Whiteboard%20at%20@(Request.Url.AbsoluteUri)">
                    <i class="icon-envelope"></i>
                     Email link to this board
                </a>
            </li>
            <li class="nav-header">Rename Board</li>
            <li>
                <form class="pull-left form-search board-name-form" data-bind="submit: saveName">
                <input data-bind="value: name" class="" placeholder="Unnamed Board" />
                <div data-bind="loadingWhen: saveName.isRunning" class="name-save-marker">
                    <i class="icon-ok" data-bind="visible: hasSavedName"></i>
                </div>
            </li>
        </form>
        </ul>
    </div>

    <div class="pull-right dropdown" title="Board Events">
        <a class="btn dropdown-toggle btn-inverse" data-toggle="dropdown" href="#" data-bind="click: clearNewEvents">
            <strong data-bind="visible: newEvents, text: newEvents"></strong>
            <i class="icon-flag icon-white"></i>
            <span class="caret"></span>
        </a>
        <ul data-bind="foreach: events" class="dropdown-menu event-menu">
            <li class="event-container well">
                <h5 data-bind="text: Description"></h5>
                <p data-bind="text: moment.utc(Date()).local().fromNow()" class="date"></p>
                <p data-bind="text: User || '(Anonymous}'" class="username"></p>
            </li>
        </ul>
    </div>
}

<div id="canvas-container">

</div>

@section scripts {
    @Scripts.Render("~/bundles/moment")
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/kinetic")
    @Scripts.Render("~/bundles/signalr")
    @Scripts.Render("~/bundles/viewmodels")
    <script src="@Url.Content("~/signalr/hubs")" type="text/javascript"></script>
    <script>
        var initialData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(this.Model));

        $(function () {
            var hub = $.connection.boardHub;
            
            var canvas = new ViewModels.CanvasViewModel("canvas-container");
            var viewModel = new ViewModels.BoardViewModel(hub, initialData, canvas);
            ko.applyBindings(viewModel);

            //note: using longPolling to work around bug 510 (https://github.com/SignalR/SignalR/issues/510) when working on Azure
            $.connection.hub.start({ transport: 'longPolling' }, viewModel.onHubStarted);
        });
    </script>
}